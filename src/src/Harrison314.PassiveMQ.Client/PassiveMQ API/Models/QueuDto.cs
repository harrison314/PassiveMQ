// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Harrison314.PassiveMQ.Client.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class QueuDto
    {
        /// <summary>
        /// Initializes a new instance of the QueuDto class.
        /// </summary>
        public QueuDto() { }

        /// <summary>
        /// Initializes a new instance of the QueuDto class.
        /// </summary>
        public QueuDto(string name, Guid? id = default(Guid?), string notificationAdress = default(string), string topicPattern = default(string), DateTime? created = default(DateTime?))
        {
            Id = id;
            Name = name;
            NotificationAdress = notificationAdress;
            TopicPattern = topicPattern;
            Created = created;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public Guid? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "notificationAdress")]
        public string NotificationAdress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "topicPattern")]
        public string TopicPattern { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "created")]
        public DateTime? Created { get; set; }

        /// <summary>
        /// Validate the object. Throws ValidationException if validation fails.
        /// </summary>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
        }
    }
}
